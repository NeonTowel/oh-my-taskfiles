version: '3'

tasks:
  rules:
    internal: true
    requires:
      vars: [ HOME_DIR, RULES_SOURCE_DIR, RULES_DEST_DIR ]
    sources:
      - '{{ .RULES_SOURCE_DIR }}/*.mdc'
    method: none
    cmds:
      - |
        if [ ! -d "{{ .RULES_SOURCE_DIR }}" ]; then
          {{ .gum_error }} "❌ Cursor rules directory not found: {{ .RULES_SOURCE_DIR }}"
          exit 1
        fi
      - |
        if [ ! -d "{{ .RULES_DEST_DIR }}" ]; then
          {{ .gum_info }} "[info] Creating {{ .RULES_DEST_DIR }} directory..."
          mkdir -p "{{ .RULES_DEST_DIR }}"
        fi
      - for: sources
        vars:
          DEST_FILE: '{{ .RULES_DEST_DIR }}/{{ .ITEM | osBase }}'
        cmd: |
          item="{{ .ITEM }}"
          file="{{ .ITEM | osBase }}"
          dest_file="{{ .RULES_DEST_DIR }}/{{ .ITEM | osBase }}"
          if [ ! -f "$dest_file" ]; then
            {{ .gum_info }} "[info] Installing $file..."
            cp "$item" "$dest_file"
          else
            {{ .gum_warn }} "⚠️  File already exists: $file"

            CHOICE=$(gum choose \
                --header "$(gum style --foreground 212 --bold --background 235 'Choose an action:')" \
                --cursor.foreground 212 \
                --selected.foreground 212 \
                --selected.bold \
                "yes - overwrite this file" \
                "no - skip this file" \
                "cancel - abort entire operation")
            
            case "$CHOICE" in
                "yes - overwrite this file")
                    cp "$item" "$dest_file"
                    {{ .gum_ok }} "✓ Overwriting $file"
                    ;;
                "no - skip this file")
                    {{ .gum_info }} "[info] Skipping $file"
                    ;;
                "cancel - abort entire operation")
                    {{ .gum_error }} "❌ Operation cancelled"
                    exit 1
                    ;;
            esac
          fi

  cursor:rules:
    silent: true
    deps: [ ":tools:gum:install" ]
    desc: "[CURSOR] Install Cursor rules to current repository"
    dir: '{{ .USER_WORKING_DIR }}'
    vars:
      HOME_DIR: '{{ .HOME | default .USERPROFILE | replace "\\" "/" }}'
      RULES_SOURCE_DIR: '{{ joinPath .HOME_DIR ".omt/dotfiles/cursor-rules" | replace "\\" "/" }}'
      RULES_DEST_DIR: "{{ .USER_WORKING_DIR }}/.cursorrules"
    cmds:
      - |
        if [ ! -d "{{ .RULES_SOURCE_DIR }}" ]; then
          {{ .gum_error }} "❌ Cursor rules directory not found: {{ .RULES_SOURCE_DIR }}"
          exit 1
        fi
      - task: rules
        dir: '{{ .RULES_SOURCE_DIR }}'
        vars:
          HOME_DIR: '{{ .HOME_DIR }}'
          RULES_SOURCE_DIR: '{{ .RULES_SOURCE_DIR }}'
          RULES_DEST_DIR: '{{ .RULES_DEST_DIR }}'