# Basic settings
ZSH_DISABLE_COMPFIX=true
export ZSH="$HOME/.oh-my-zsh"
ZSH_THEME="mh"
DISABLE_UNTRACKED_FILES_DIRTY="true"
export AZURE_DEV_COLLECT_TELEMETRY=no
export PODMAN_IGNORE_CGROUPSV1_WARNING=1

# Path configuration
export PATH=$HOME/bin:$HOME/.local/bin:/usr/local/bin:$PATH

# Oh My Zsh configuration
plugins=(git)

# Completions
fpath=(/usr/local/share/zsh-completions $fpath)

# Oh My Zsh
source $ZSH/oh-my-zsh.sh

# Aliases: lsd
if command -v lsd &> /dev/null; then
  alias ll='lsd -lh'
  alias ls='lsd'
  alias tree='ls --tree'
fi

# Aliases: bat
if command -v bat &> /dev/null; then
  alias cat='bat'
  alias ccat='bat --style=-grid,-numbers --paging=never'
fi

# Aliases: git
alias gl='git log --graph --decorate --pretty=oneline --abbrev-commit'
alias gs='git status --renames'

# Google Cloud SDK
if [ -f "$HOME/google-cloud-sdk/path.zsh.inc" ]; then
  source "$HOME/google-cloud-sdk/path.zsh.inc"
fi
if [ -f "$HOME/google-cloud-sdk/completion.zsh.inc" ]; then
  source "$HOME/google-cloud-sdk/completion.zsh.inc"
fi

# Direnv configuration
if command -v direnv &> /dev/null; then
  eval "$(direnv hook zsh)"
fi

# Starship configuration
if command -v starship &> /dev/null; then
  eval "$(starship init zsh)"
fi

# Go-task configuration
if command -v task &> /dev/null; then
    eval "$(task --completion zsh)"
fi

# Oh-My-Taskfiles configuration
if [ -f "$HOME/.omt/taskfile.yaml" ]; then
  alias omt='task -t $HOME/.omt/taskfile.yaml'
fi

# Go configuration
if [ -x "/usr/local/go/bin" ]; then
  export PATH=$PATH:/usr/local/go/bin
fi

# Rust configuration
if [ -x "$HOME/.cargo/bin/rustc" ]; then
  source "$HOME/.cargo/env"
fi

# Node configuration
if [ -x "$HOME/.nvm/nvm.sh" ]; then
  export NVM_DIR="$HOME/.nvm"
  [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
  [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
fi

# Awesome-git configuration
if command -v awesome-git &> /dev/null; then
  alias ag='awesome-git'
fi

# if npiperelay.exe is in the path, copy agent-bridge.sh to the home directory from $HOME/.omt/dotfiles/agent-bridge.sh
if [ -f "/usr/local/bin/npiperelay.exe" ] && [ ! -f "$HOME/.agent-bridge.sh" ]; then
  if [ -f "$HOME/.omt/dotfiles/agent-bridge.sh" ]; then
    cp $HOME/.omt/dotfiles/agent-bridge.sh $HOME/.agent-bridge.sh
  fi
fi

# 1Password SSH Agent bridge for WSL
if [ -f "$HOME/.agent-bridge.sh" ]; then
  source "$HOME/.agent-bridge.sh"
  if [ -f "$HOME/.1password/agent.sock" ]; then
    export SSH_AUTH_SOCK=$HOME/.1password/agent.sock
  fi
fi

# Podman socket configuration
if [ -S "$XDG_RUNTIME_DIR/podman/podman.sock" ]; then
  export DOCKER_HOST="unix://$XDG_RUNTIME_DIR/podman/podman.sock"
fi